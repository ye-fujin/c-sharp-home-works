// Задание 1. Метод разделения строки на слова
// Что нужно сделать
// Пользователь вводит в консольном приложении длинное предложение. Каждое слово в этом предложении отделено одним пробелом. Необходимо создать метод, который в качестве входного параметра принимает строковую переменную, а в качестве возвращаемого значения — массив слов. После вызова данного метода программа вызывает второй метод, который выводит каждое слово в отдельной строке.

// Советы и рекомендации
// Для реализации данной программы можно написать алгоритм разделения на слова самостоятельно, используя цикл. Также можете использовать метод string.Split(‘ ’); Прочитайте об этом методе подробнее на странице документации Microsoft.
// Для названия методов используйте CamelCase, когда каждое следующее слово начинается с заглавной буквы. Например, метод с именем GetPositiveRandomInt возвращает положительное целое случайное число. По такому же принципу следует называть и свои методы. 

// Что оценивается
// В программе, помимо основного метода main, присутствует два других метода, которые вызываются в теле метода main. 
// Названием методов соответствуют тому, что они делают (разделяют или выводят данные).

// namespace CSharpHomeWorksNamespace
// {
//     class CSharpHomeWorks
//     {
//         static void Main()
//         {
//             Console.WriteLine("Введите предложение, каждое слово которого отделено пробелом:");
//             PrintArray(SplitInput(Console.ReadLine() ?? ""));
//         }

//         private static string[] SplitInput(string input)
//         {
//             if (Convert.ToBoolean(input.Length))
//             {
//                 return input.Split(" ");
//             }

//             return new string[1];
//         }

//         private static void PrintArray(string[] input)
//         {
//             if (Convert.ToBoolean(input.Length)) {
//                 foreach (string item in input)
//                 {
//                     Console.WriteLine(item);
//                 }
//             }
//         }
//     }
// }

// Задание 2. Перестановка слов в предложении
// Что нужно сделать
// Пользователь вводит в программе длинное предложение. Каждое слово раздельно одним пробелом. После ввода пользователь нажимает клавишу Enter. Необходимо создать два метода:

// первый метод разделяет слова в предложении;
// второй метод меняет эти слова местами (в обратной последовательности).
// При этом важно учесть, что один метод вызывается внутри другого метода, то есть в методе main вызывается метод cо следующей сигнатурой — ReversWords (string inputPhrase). Внутри этого метода вызывается метод по разделению входной фразы на слова.

// Советы и рекомендации
// Для сложения строк можно использовать конкатенацию строк. Выражение вида ResultString += NewString + “ ” добавит к текущей строке, которая представлена переменной ResultString, новую строку из переменной NewString и также добавит пробел к концу строки. 
// Для реализации алгоритма разделения строки на слова можно воспользоваться рекомендациями из задания 1.

// Что оценивается
// Вызов метода по разделению на слова происходит внутри метода, который отвечает непосредственно за инвертирование слов в предложении.

namespace CSharpHomeWorksNamespace
{
    class CSharpHomeWorks
    {
        static void Main()
        {
            Console.WriteLine("Введите предложение, каждое слово которого отделено пробелом:");
            ReverseWords(Console.ReadLine() ?? "");
        }

        private static string[] SplitInput(string input)
        {
            if (Convert.ToBoolean(input.Length))
            {
                return input.Split(" ");
            }

            return new string[1];
        }

        private static void ReverseWords(string input)
        {
            if (Convert.ToBoolean(input.Length)) {
                string result = "";

                foreach (string item in SplitInput(input).Reverse())
                {
                    result += $"{item} ";
                }

                Console.WriteLine(result);
            }
        }
    }
}
